// <auto-generated />
using System;
using AppB2C2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppB2C2.Migrations
{
    [DbContext(typeof(TestDb))]
    partial class TestDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppB2C2.Models.Collection", b =>
                {
                    b.Property<int>("CollectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CollectionId"));

                    b.Property<int?>("AddedItems")
                        .HasColumnType("int");

                    b.Property<string>("CollectionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CollectionId");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            CollectionId = 1,
                            CollectionName = "Collection Test",
                            CreatedOn = new DateTime(2023, 9, 25, 7, 50, 31, 928, DateTimeKind.Local).AddTicks(1431)
                        });
                });

            modelBuilder.Entity("AppB2C2.Models.CollectionItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedPrice")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReleaseDate")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CollectionId");

                    b.ToTable("CollectionItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            CollectionId = 0,
                            CreatedOn = new DateTime(2023, 9, 25, 7, 50, 31, 928, DateTimeKind.Local).AddTicks(1223),
                            EstimatedPrice = 0,
                            ItemName = "Item Test",
                            ReleaseDate = 0
                        });
                });

            modelBuilder.Entity("AppB2C2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("CreatedCollections")
                        .HasColumnType("int");

                    b.Property<string>("MailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedCollections = 0,
                            MailAdress = "test@home.nl",
                            UserName = "Test Name",
                            UserPassword = "test_pass"
                        });
                });

            modelBuilder.Entity("AppB2C2.Models.CollectionItem", b =>
                {
                    b.HasOne("AppB2C2.Models.Collection", "Collection")
                        .WithMany("CollectionItems")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("AppB2C2.Models.Collection", b =>
                {
                    b.Navigation("CollectionItems");
                });
#pragma warning restore 612, 618
        }
    }
}
